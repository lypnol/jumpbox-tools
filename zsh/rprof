#!/bin/zsh

# ssh port forwarder to profile go apps

_env_jumbox() {
    local jumpbox=""
    if [ "$1" = "prod" ]; then
        jumpbox="dd.prd"
    elif [ "$1" = "staging" ]; then
        jumpbox="dd.stg"
    else
        echo "unkown env '$1'"
        return 1
    fi

    echo "$jumpbox"
}

ipofr() {
    local jumpbox=$(_env_jumbox "$1")
    
    ssh -tt "$jumpbox" "ssh -G \$(hosts_by_role $2 | head -n 1) | awk '/^hostname/{ print \$2 }'" 2>/dev/null | grep -oP '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | head -n 1
}

ipofi() {
    local jumpbox=$(_env_jumbox "$1")
    
    ssh -tt "$jumpbox" "ssh -G $2 | awk '/^hostname/{ print \$2 }'" 2>/dev/null | grep -oP '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | head -n 1
}

rprofpid() {
    ps aux | grep -v grep | grep "ssh -f -o ExitOnForwardFailure=yes -L" | awk '{print $2}'
}

rprof() {
    local _rprof_usage() {
        echo "rprof is a port forwarder to profile go apps"
        echo "usage: rprof env type target [port]"
        echo ""
        echo "    - env     remote evironment: 'prod' or 'staging'"
        echo "    - type    lookup type: 'a': ip address, 'r': role, 'i': instance id"
        echo "    - target  service running app to profile"
        echo "    - port    specify local tunnel port, default 8080"
    }

    if [ $# -le 2 ]; then
        _rprof_usage
        return 1
    fi

    local ip=""
    if [ "$2" = "a" ]; then
        ip=$3
    elif [ "$2" = "i" ]; then
        ip=`ipofi "$1" "$3"`
    elif [ "$2" = "r" ]; then
        ip=`ipofr "$1" "$3"`
    else;
        _rprof_usage
        return 1
    fi

    if [ "$ip" = "" ]; then
        return 1
    fi

    local port=8080
    if [ $# -ge 4 ]; then
        port=$4
    fi

    echo "using ip target $ip"
    echo "using local port $port"
    ssh -f -o ExitOnForwardFailure=yes -L "$port":localhost:6060 "$ip" sleep 1
    echo "done.\n"
    echo " you can now use: go tool pprof http://localhost:$port/debug/pprof/heap"
    echo ""

    pid=$(ps aux | grep -v grep | grep "ssh -f -o ExitOnForwardFailure=yes -L $port" | awk '{print $2}')
    echo "ssh tunnel pid is $pid don't forget to kill it when done"
}
